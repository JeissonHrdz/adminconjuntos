/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.60
 * Generated at: 2023-04-04 15:34:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class paginaPrincipal_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "librerias.jsp", out, false);
      out.write("      \n");
      out.write("<style>\n");
      out.write("#image-map {\n");
      out.write("  width: 98%;\n");
      out.write("  height: 595px;\n");
      out.write("  border: 1px solid #ccc;\n");
      out.write("\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<div class=\"barraTitulo\" > \n");
      out.write("    <img src=\"IMAGENES/logo mipe 2.png\" style=\"max-width: 200px; max-height: 600px;\" >\n");
      out.write("</div>\n");
      out.write("<div class=\"barraLateralInf\">\n");
      out.write("    hjgh\n");
      out.write("</div>\n");
      out.write("<!--MODAL PARA SUBIR Y PRCESAR IMAGEN -->\n");
      out.write("\n");
      out.write("<div  class=\"contenidoModal\" >   \n");
      out.write("    <div class=\"modalSubirImagen\">\n");
      out.write("        <div  class=\"tituloModal\" >Subir imagen</div>\n");
      out.write("        <div class=\"subirImagen\">\n");
      out.write("            <br> \n");
      out.write("            <h3 class=\"descriptionModal\" >Seleccione la imagen que desea procesar</h3>\n");
      out.write("            <div class=\"cargarImagen\"> </div>\n");
      out.write("            <br>\n");
      out.write("            <label for=\"file\" class=\"inputFile\" style=\"float: left;\">Seleccionar Imagen</label>             \n");
      out.write("            <form  class=\"imagen\"  enctype=\"multipart/form-data\" >\n");
      out.write("                <input type=\"file\" id=\"file\" name=\"file\" class=\"\" style=\"display: none;\">   \n");
      out.write("\n");
      out.write("                <button type=\"button\" class=\"bttn\"  onclick=\"enviarImagen()\"  style=\"display: none\">Subir</button>\n");
      out.write("\n");
      out.write("            </form>  \n");
      out.write("\n");
      out.write("            <button type=\"button\" class=\"bttnProcesarImg\" onclick=\"procesarImagen()\" style=\"display: none;\">Procesar Imagen</button>\n");
      out.write("            <input type=\"text\"  name=\"ruta\" class=\"ruta\"  hidden=\"\">\n");
      out.write("            <div  class=\"gifCarga\" ></div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    /* Funcion de moviento de ventana modal */\n");
      out.write("    $(function () {\n");
      out.write("        $(\".modalSubirImagen\").draggable({containment: \".contenidoModal\", scroll: false});\n");
      out.write("\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    /* Validaciones de tamaÃ±o de nombre, formato*/\n");
      out.write("    $(\"#file\").change(function () {\n");
      out.write("\n");
      out.write("        var name = $(\"#file\").val();\n");
      out.write("        var nombre = name.split('\\\\');\n");
      out.write("        var numChars = nombre[2].length;\n");
      out.write("        var formato = nombre[2].split(\".\");\n");
      out.write("\n");
      out.write("        if (formato[1] === \"jpg\" || formato[1] === \"png\" || formato[1] === \"JPG\" || formato[1] === \"png\") {\n");
      out.write("            if (numChars > 30) {\n");
      out.write("                alert(\"El Nombre del archivo es muy largo...\");\n");
      out.write("            } else {\n");
      out.write("\n");
      out.write("                $(\".bttn\").css(\"display\", \"block\");\n");
      out.write("                $(\".inputFile\").html(nombre[2]);\n");
      out.write("            }\n");
      out.write("        } else {\n");
      out.write("            alert(\"Formato no valido, el archivo debe ser un archivo de imagen...\");\n");
      out.write("\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    /*Funcion para subir imagen al servidor*/\n");
      out.write("    function enviarImagen() {\n");
      out.write("\n");
      out.write("        var archivo = new FormData($(\".imagen\")[0]);\n");
      out.write("        //  archivo.append(\"modulo\",\"subirImagen\");\n");
      out.write("\n");
      out.write("        $.ajax({\n");
      out.write("            type: \"POST\",\n");
      out.write("            url: \"controladorImagen\",\n");
      out.write("            data: archivo,\n");
      out.write("            cache: false,\n");
      out.write("            contentType: false,\n");
      out.write("            processData: false,\n");
      out.write("            success: function (msg) {\n");
      out.write("                $(\".bttn\").css(\"display\", \"none\");\n");
      out.write("                $(\".bttnProcesarImg \").css(\"display\", \"block\");\n");
      out.write("                $(\".descriptionModal\").hide();\n");
      out.write("                $(\".cargarImagen\").html(\"<center><img src='IMP/\" + msg + \"' style='max-witdth: 600px; height: 220px;'> </center>\");\n");
      out.write("                $(\".modalSubirImagen\").css(\"width\", \"630px\", \"height\", \"430px\");\n");
      out.write("                $(\".modalSubirImagen\").css(\"height\", \"430px\");\n");
      out.write("                $(\".ruta\").val(\"IMP\\\\\" + msg);\n");
      out.write("\n");
      out.write("            },\n");
      out.write("            error: function (msg) {\n");
      out.write("\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("\n");
      out.write("    }\n");
      out.write("\n");
      out.write("\n");
      out.write("    function procesarImagen() {\n");
      out.write("\n");
      out.write("        var rutaImagen = $(\".ruta\").val();\n");
      out.write("        alert(rutaImagen);\n");
      out.write("        $.ajax({\n");
      out.write("            type: \"POST\",\n");
      out.write("            url: \"controladorProcesarImagen\",\n");
      out.write("            data: \"ruta=\" + rutaImagen,\n");
      out.write("            beforeSend: function () {\n");
      out.write("                $(\".gifCarga\").html(\"<center>Procesando<br><img src='IMAGENES/carga.gif'></center>\");\n");
      out.write("                $(\".bttn\").hide();\n");
      out.write("                $(\".bttnProcesarImg\").hide();\n");
      out.write("                $(\".inputFile\").hide();\n");
      out.write("                $(\".descriptionModal\").hide();\n");
      out.write("            },\n");
      out.write("            success: function (msg) {\n");
      out.write("           \n");
      out.write("                $(\".contenidoModal\").html(\"<div id='image-map'></div><div class='volver' >aqui estoy jijij</div>\");\n");
      out.write("                 $(\".volver\").show();\n");
      out.write("                var datos = msg.split(\",\");\n");
      out.write("                var ancho = datos[0];\n");
      out.write("                var alto =  datos[1];\n");
      out.write("                var ruta = datos[2];\n");
      out.write("         \n");
      out.write("                var map = L.map('image-map', {\n");
      out.write("                    minZoom: 4,\n");
      out.write("                    maxZoom: 10,\n");
      out.write("                    center: [0, 0],\n");
      out.write("                    zoom: 7,\n");
      out.write("                    crs: L.CRS.Simple\n");
      out.write("                });\n");
      out.write("\n");
      out.write("// dimensions of the image\n");
      out.write("                var w = ancho,\n");
      out.write("                        h = alto,\n");
      out.write("                        url = ruta;\n");
      out.write("\n");
      out.write("// calculate the edges of the image, in coordinate space\n");
      out.write("                var southWest = map.unproject([0, h], map.getMaxZoom() - 1);\n");
      out.write("                var northEast = map.unproject([w, 0], map.getMaxZoom() - 1);\n");
      out.write("                var bounds = new L.LatLngBounds(southWest, northEast);\n");
      out.write("\n");
      out.write("// add the image overlay, \n");
      out.write("// so that it covers the entire map\n");
      out.write("                L.imageOverlay(url, bounds).addTo(map);\n");
      out.write("\n");
      out.write("// tell leaflet that the map is exactly as big as the image\n");
      out.write("                map.setMaxBounds(bounds);\n");
      out.write("\n");
      out.write("         \n");
      out.write("\n");
      out.write("\n");
      out.write("            },\n");
      out.write("            error: function (msg) {\n");
      out.write("\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("        /* alert(rutaImagen);\n");
      out.write("         $.post('controladorProcesarImagen',{ruta: rutaImagen},function(){       */\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
